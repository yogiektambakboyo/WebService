<?phpclass Admin_Replenish_Gbs extends CI_Controller{	public function __construct() {        parent::__construct();        if (!$this->session->userdata('OperatorCode') || $this->session->userdata("OperatorRole") != '10/WHR/000') {            redirect(base_url() . "index.php/login");        }        $this->load->model('admin_replenish_gbs_model');    }		public function index()	{		$this->session->unset_userdata('kodeNota');		$this->cart->destroy();					$this->form_validation->set_rules('kodeNota','Radio Button', 'required');		if ($this->form_validation->run() == TRUE){			$kodeNota = $this->input->post('kodeNota');			$this->session->set_userdata('kodeNota', $kodeNota);			// $data['dtlTransfer'] = $this->admin_replenish_gbs_model->getDtlTransfer($kodeNota);			// $this->load->view('admin_replenish_gbs/entry_detail',$data);			redirect('admin_replenish_gbs/entry_detail');		}		$data['replenishGbs'] = $this->admin_replenish_gbs_model->getMstTransfer();		$this->load->view('admin_replenish_gbs/index',$data);	}		public function entry_detail()	{		// var_dump($this->input->post());		$kodeNota = $this->session->userdata('kodeNota');				// $this->form_validation->set_rules('rackAsal','Rack Asal','required|callback_cekRack');		// $this->form_validation->set_rules('binAsal','Bin Asal', 'required|callback_cekBin');		// $this->form_validation->set_rules('rackTujuan','Rack Tujuan','required|callback_cek_WHSKURack_tujuan');		$this->form_validation->set_rules('jmlInput','Jumlah','required');		if ($this->form_validation->run() == true){					$namaBarang = $this->input->post('namaBarang');			$kodeBarang = $this->input->post('kodeBarang');			$jml		= $this->input->post('jml');			$jmlKonv	= $this->input->post('jmlKonv');			$gudang		= $this->input->post('gudang');			$jmlIn		= $this->input->post('jmlInput');			$satuan 	= $this->input->post('satuan');			$binAsal	= $this->input->post('binCode');			$rackAsal	= $this->input->post('rackSlot');			// $rackTujuan = $this->input->post('rackTujuan');			$GudangTjn = $this->input->post('kodeGudangTjn');						$jmlInAll = $jmlIn * $satuan;				if ($jmlInAll > $jml) {				$data['error'] = 'Jumlah Berlebih';			}else {								$sum =0;				foreach($this->cart->contents() as $barang){					if ($barang['options']['kodeBarang'] == $kodeBarang){						$sum+= $barang['qty'];										}								} 				$totalInput = $sum + $jmlIn;						if ($totalInput > $jml){					$data['error'] = 'Jumlah Diambil Berlebih';				}else {									$konvSat = $this->admin_replenish_gbs_model->satuan($kodeBarang,$jmlInAll);									$brgMasuk = array(						'id'  	=> 'brg',						'qty' 	=> $jmlInAll,						'price'	=> 1,						'name' 	=> $GudangTjn,						'options'=>array(														'kodeBarang' => $kodeBarang,							'namaBarang' => $namaBarang,							'jmlAll'	 => $jml,							'jmlKonv' 	 => $jmlKonv,							// 'jmlIn'      => $jmlIn,							'jmlDiambil' => $konvSat[0]['QtyKonv'],							'gudang' 	 => $gudang,							// 'satuan'	 => $satuan,							'binAsal'	 => $binAsal,							'rackAsal'	 => $rackAsal,							'rackTujuan' => "",							'rackTujuanKode' => "",						)					);					$this->cart->insert($brgMasuk);										$data['success'] = 'Data Berhasil Di Input' ;								}			}						}				$dtl = $this->admin_replenish_gbs_model->getDtlTransfer($kodeNota);						foreach ($dtl as $detail){		$sum =0;			foreach($this->cart->contents() as $barang){				if ($barang['options']['kodeBarang'] == $detail['brg']){					$sum+= $barang['qty'];									}							}			$result[] = $this->admin_replenish_gbs_model->satuan($detail['brg'],$sum);			$sisa 	  = $detail['jml'] - $sum;			$resSisa[]= $this->admin_replenish_gbs_model->satuan($detail['brg'],$sisa);						}			$data['konv']		 = $result;		$data['konvSisa']	 = $resSisa;		$data['dtlTransfer'] = $this->admin_replenish_gbs_model->getDtlTransfer($kodeNota);		$data['satuan'] 	 = $this->admin_replenish_gbs_model->getSatuan($kodeNota);		$data['RackName']	 = $this->admin_replenish_gbs_model->getRackSlot();			$this->load->view('admin_replenish_gbs/entry_detail', $data);	}		public function ubahRack()	{		$rowid	= $_POST['rowid'];				/// sugestion ada		if (!empty($_POST['rackSlot'])){			$rack	= $_POST['rackSlot'];			$rackCode = $_POST['rackCode'];						$data = array(					'rowid' => $rowid,					// 'id'	=> $rack,					// 'namaBarang' => $rack,					'options' => array('rackTujuan' => $rack,'rackTujuanKode' => $rackCode)				);								// var_dump($rack);							if ($this->admin_replenish_gbs_model->cekRack($rackCode) == '0'){						$data['status'] = false;				$data['error'] = '<div class="alert alert-error"><h5>Kode Rack Salah</h5></div>';				header('Content-Type: application/json', true);				echo json_encode($data);							}else {				$this->cart->update_options($data);				$this->session->set_flashdata('success','Kode Rack Berhasil Dirubah');				$data['status'] = true;				// $data['error']  = '<div class="alert alert-error"><h5>Kode Rack Berhasil Dirubah</h5></div>';				header('Content-Type: application/json', true);				echo json_encode($data);											}		}				/// sugestion tidak ada				if (!empty($_POST['inputCek'])){			$rackName= $_POST['inputCek'];			$kodeBrg = $_POST['kodeBrg'];						$result  = $this->admin_replenish_gbs_model->cekRackSlotName($rackName);			// var_dump($result);			$rack	 = $result['RackSlotCode'];						if ($this->admin_replenish_gbs_model->cekRack($rack) == '0'){						$data['status'] = false;				$data['error'] = '<div class="alert alert-error"><h5>Kode Rack Salah</h5></div>';				header('Content-Type: application/json', true);				echo json_encode($data);							}else {				if ($this->admin_replenish_gbs_model->cekRackSlotUse($rack,$kodeBrg)){										$getRackName = $this->admin_replenish_gbs_model->getName($rack,$kodeBrg);					$data = array(						'rowid' => $rowid,						// 'id'	=> $rack,						// 'namaBarang' => $rack,						'options' => array('rackTujuan' => $getRackName[0]['name'],'rackTujuanKode' => $rack)					);										$this->cart->update_options($data);					$this->session->set_flashdata('success','Kode Rack Berhasil Dirubah');					$data['status'] = true;					// $data['error']  = '<div class="alert alert-error"><h5>Kode Rack Berhasil Dirubah</h5></div>';					header('Content-Type: application/json', true);					echo json_encode($data);														}else{					$data['status'] = false;					$data['error'] = '<div class="alert alert-error"><h5>Rack Slot Barang Tidak Sama</h5></div>';					header('Content-Type: application/json', true);					echo json_encode($data);				}			}									// var_dump($this->admin_replenish_gbs_model->cekRackSlotUse($rack,$kodeBrg));		}						// $this->form_validation->set_rules('inputRack','Rack Slot','required');		// if ($this->form_validation->run() == true){.		// if (!empty($_POST['inputCek'])){									// if ($this->admin_replenish_gbs_model->cekRack($rack) == '0'){						// $data['status'] = false;				// $data['error'] = '<div class="alert alert-error"><h5>Kode Rack Salah</h5></div>';				// header('Content-Type: application/json', true);				// echo json_encode($data);							// }else {					// if ($this->admin_replenish_gbs_model->cekRackSlotUse($rack,$kodeBrg)){						// $data['status'] = true;						// $data['error']  = '<div class="alert alert-error"><h5>Kode Rack Berhasil Dirubah</h5></div>';						// header('Content-Type: application/json', true);						// echo json_encode($data);												// $this->cart->update_options($data);					// }else{						// $data['status'] = false;						// $data['error'] = '<div class="alert alert-error"><h5>Rack Slot Barang Tidak Sama</h5></div>';						// header('Content-Type: application/json', true);						// echo json_encode($data);					// }			// }		// }else{			// $data['status'] = false;			// $data['error'] = '<div class="alert alert-error"><h5>Kode Rack Belum Diisi</h5></div>';			// header('Content-Type: application/json', true);			// echo json_encode($data);		// }		// var_dump($rack);	}		public function hapus_brg()	{		$rowId	= $_POST['rowId'];				$data = array(					'rowid' => $rowId,					'qty'	=> 0		);		$this->cart->update($data);				$this->session->set_flashdata('success','Data Berhasil Di Hapus');				$arr[] = array('success' => '');				echo $_GET['jsoncallback'].'('.json_encode($arr).');';	}		public function simpan()	{		$mstTransfer = $this->admin_replenish_gbs_model->getDtlTransfer($this->session->userdata('kodeNota'));				$jml =0;		foreach ($mstTransfer as $mst){			$brg[] 	  = $mst['brg'];			$jml	 += $mst['jml'];			$gdngAsal = $mst['AsalGudang']; 			$gdngTjn  = $mst['tujuanGudang'];			$kodeNota = $mst['kodeNota'];						// var_dump($mst);		}		$jml = (int)$jml;		// var_dump((int)$jml);						$qty =0;		foreach ($this->cart->contents() as $cart){			$qty	   += $cart['qty'];			$nmBrg[] 	= $cart['options']['kodeBarang'];  			$rackTujuan[] 	= $cart['options']['rackTujuan'];  		}		$filter 	= count(array_filter($rackTujuan));		$countRack 	= count($rackTujuan);						$cek = array_diff($brg,$nmBrg);				$data = array();		if (!empty($cek)){			$data['status'] = false;			$data['error'] = '<div class="alert alert-error"><h5>Masukan Semua Barang</h5></div>';            header('Content-Type: application/json', true);            echo json_encode($data);				}else{			if ($jml !== $qty){				$data['status'] = false;				$data['error']  = '<div class="alert alert-error"><h5>Jumlah Qty Kurang</h5></div>';				header('Content-Type: application/json', true);				echo json_encode($data);			}else{				if($filter !== $countRack) {									$data['status'] = false;					$data['error']  = '<div class="alert alert-error"><h5>Rack Tujuan Belum Diisi</h5></div>';					header('Content-Type: application/json', true);					echo json_encode($data);								}else{					$TransactionCode = $this->admin_replenish_gbs_model->getTransactionCode();										//// set master rpl					if($this->admin_replenish_gbs_model->setMasterTaskRpl($TransactionCode,$kodeNota, $gdngAsal, $gdngTjn, $this->session->userdata('OperatorCode'))) {										/*	foreach ($this->cart->contents() as $cart1) {							// memasukan kode barang ke dalam array							$brg1[] = $cart1['options']['kodeBarang'];																					}												// cari data yang double						$count = array();						foreach($brg1 as $key => $value) {						  if(!isset($count[$value])) {							$count[$value] = 0;						  }						  $count[$value]++;						}						$result = array_filter($count, function($value) {						return $value > 1;						});						$result = array_keys($result);												$jml = 0;						foreach ($this->cart->contents() as $cart2) {							foreach($result as $dataDobel) {								if ($cart2['options']['kodeBarang'] == $dataDobel){																	var_dump($cart2['qty']);									$jml += $cart2['qty'];								}							}						}												// var_dump($jml);						*/						$i=0;						foreach ($this->cart->contents() as $cart) {														//set detail rpl							$this->admin_replenish_gbs_model->setDetailTaskRplmanual($TransactionCode, $i + 1, $cart['options']['binAsal'], $cart['options']['kodeBarang'], $cart['qty'], $cart['options']['rackAsal'], $cart['options']['rackTujuanKode']);														/// del task derp							$this->admin_replenish_gbs_model->deleteDetailTaskDerp($TransactionCode,$cart['options']['kodeBarang']);																//set detail task derp							$this->admin_replenish_gbs_model->setDetailTaskDERP($TransactionCode, $cart['options']['kodeBarang'], $cart['options']['jmlAll']);															$i++;						}												$this->session->set_flashdata('success','Data Berhasil Di Simpan');								$data['status'] = true;								header('Content-Type: application/json', true);								echo json_encode($data);												}else{											$data['status'] = false;						$data['error']  = '<div class="alert alert-error"><h5>Set Master Error Hub. IT</h5></div>';						header('Content-Type: application/json', true);						echo json_encode($data);											}				}							}		}					}		function cekBin($kodeBin)    {        if ($this->admin_replenish_gbs_model->cekBin($kodeBin) == '0'){            $this->form_validation->set_message('cekBin', 'Kode Bin Tidak Ada');            return FALSE;        }        return TRUE;    }		function cekRack($rack)    {        if ($this->admin_replenish_gbs_model->cekRack($rack) == '0'){            $this->form_validation->set_message('cekRack', 'RackSlot Tidak Ada');            return FALSE;        }        return TRUE;    }		function cek_WHSKURack_tujuan($DestRack) {        $binAsal	= $this->input->post('binAsal');		$rackAsal	= $this->input->post('rackAsal');        $kodeBarang = $this->input->post('kodeBarang');		        $result = $this->admin_replenish_gbs_model->cekWHSKURack($rackAsal, $DestRack, $binAsal, $kodeBarang);        if ($result['status'] == FALSE) {            $this->form_validation->set_message('cek_WHSKURack_tujuan', $result['msg']);            return false;        }        return true;    }		public function get_ajax_suggestion() 	{		$brg	= $_POST['brg'];		$jml	= $_POST['jml'];		$gudang	= $_POST['gudang'];		        $result = $this->admin_replenish_gbs_model->getSuggestion($brg,$jml,$gudang);				$satuan = $this->admin_replenish_gbs_model->getSatuan($brg);		// var_dump($_POST['rowId']);		        $arr=array();        foreach ($result as $row)        {            $arr[] = array("name" => $row['Name'],"rackLevel" => $row['RackLevel'],"expDate" => date("M Y",strtotime($row['ExpDate'])),"qty" => $row['Qty'], 'qtyKonv' => $row['QtyKonv'], 'satuan' => $satuan, 'binCode' => $row['binCode'], 'rackSlot' => $row['rackSlotCode']);        }        echo $_GET['jsoncallback'] . '(' . json_encode($arr) . ');';    }		public function get_ajax_suggestion2() 	{		$rowId	= $_POST['rowId'];				foreach ($this->cart->contents() as $cart){			if ($cart['rowid'] == $rowId){				$kodeBrg = $cart['options']['kodeBarang'];				$gudang = $cart['name'];				// var_dump($cart);			}		}		$jml = 0;		        $result = $this->admin_replenish_gbs_model->getSuggestion($kodeBrg,$jml,$gudang);				// $satuan = $this->admin_replenish_gbs_model->getSatuan($brg);		// var_dump($result);		        $arr=array();        foreach ($result as $row)        {            $arr[] = array("name" => $row['Name'],"rackLevel" => $row['RackLevel'],"expDate" => date("M Y",strtotime($row['ExpDate'])),"qty" => $row['Qty'], 'qtyKonv' => $row['QtyKonv'], 'binCode' => $row['binCode'], 'rackSlot' => $row['rackSlotCode']);        }        echo $_GET['jsoncallback'] . '(' . json_encode($arr) . ');';    }		public function get_satuan() 	{		$sum	= $_POST['sum'];		$brg	= $_POST['brg'];		// var_dump($sum);        // $result = $this->admin_replenish_gbs_model->getSuggestion($brg,$jml,$gudang);				$result = $this->admin_replenish_gbs_model->satuan($brg,$sum);		// var_dump($satuan);		        $arr=array();        foreach ($result as $row)        {            $arr[] = array("qty" => $row['QtyKonv']);        }        echo $_GET['jsoncallback'] . '(' . json_encode($arr) . ');';    }		public function get_name_rackSlot()	{		$rack	= $_GET['dataPost'];		// $rack	= $_POST['RackName'];		// var_dump($rack);				// $result = $this->admin_replenish_gbs_model->cekRackSlotName($rack);        // $arr = array("status" => $result['status'], 'RackSlotCode' => $result['RackSlotCode']);        // echo $_GET['jsoncallback'] . '(' . json_encode($arr) . ');';		 		if(!empty($rack)){						$cek = $this->admin_replenish_gbs_model->cekRackSlotName($rack);						if (!empty($cek)){				$i = 0;				foreach ($cek as $row){				// var_dump($row["Name"]);					$result[$i]["name"] 			= $row["Name"];					$result[$i]["rackSlot"] 		= $row["RackSlotCode"];					$i++;				}			}else{				$result[]["name"]	= 'Data Tidak Ditemukan';			}						echo json_encode($result);			// $this->load->view('admin_replenish_gbs/auto',$result );		}	}}